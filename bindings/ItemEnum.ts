// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Constant } from "./Constant";
import type { Enum } from "./Enum";
import type { Function } from "./Function";
import type { GenericBound } from "./GenericBound";
import type { Generics } from "./Generics";
import type { Impl } from "./Impl";
import type { Import } from "./Import";
import type { Module } from "./Module";
import type { Primitive } from "./Primitive";
import type { ProcMacro } from "./ProcMacro";
import type { Static } from "./Static";
import type { Struct } from "./Struct";
import type { Trait } from "./Trait";
import type { TraitAlias } from "./TraitAlias";
import type { Type } from "./Type";
import type { TypeAlias } from "./TypeAlias";
import type { Union } from "./Union";
import type { Variant } from "./Variant";

/**
 * Specific fields of an item.
 *
 * Part of [`Item`].
 */
export type ItemEnum = { "module": Module } | { "extern_crate": { 
/**
 * The name of the imported crate.
 */
name: string, 
/**
 * If the crate is renamed, this is its name in the crate.
 */
rename: string | null, } } | { "import": Import } | { "union": Union } | { "struct": Struct } | { "struct_field": Type } | { "enum": Enum } | { "variant": Variant } | { "function": Function } | { "trait": Trait } | { "trait_alias": TraitAlias } | { "impl": Impl } | { "type_alias": TypeAlias } | { "constant": { 
/**
 * The type of the constant.
 */
type: Type, 
/**
 * The declared constant itself.
 */
const: Constant, } } | { "static": Static } | "foreign_type" | { "macro": string } | { "proc_macro": ProcMacro } | { "primitive": Primitive } | { "assoc_const": { 
/**
 * The type of the constant.
 */
type: Type, 
/**
 * The stringified expression for the default value, if provided, e.g.
 * ```rust
 * const X: usize = 640 * 1024;
 * //               ^^^^^^^^^^
 * ```
 */
default: string | null, } } | { "assoc_type": { 
/**
 * The generic parameters and where clauses on ahis associated type.
 */
generics: Generics, 
/**
 * The bounds for this associated type. e.g.
 * ```rust
 * trait IntoIterator {
 *     type Item;
 *     type IntoIter: Iterator<Item = Self::Item>;
 * //                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 * }
 * ```
 */
bounds: Array<GenericBound>, 
/**
 * The default for this type, if provided, e.g.
 * ```rust
 * type X = usize;
 * //       ^^^^^
 * ```
 */
default: Type | null, } };
