// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { ReprKind } from "./ReprKind";

/**
 * The contents of a `#[repr(...)]` attribute.
 *
 * Used in [`Attribute::Repr`].
 */
export type AttributeRepr = { 
/**
 * The representation, e.g. `#[repr(C)]`, `#[repr(transparent)]`
 */
kind: ReprKind, 
/**
 * Alignment in bytes, if explicitly specified by `#[repr(align(...)]`.
 */
align: bigint | null, 
/**
 * Alignment in bytes, if explicitly specified by `#[repr(packed(...)]]`.
 */
packed: bigint | null, 
/**
 * The integer type for an enum descriminant, if explicitly specified.
 *
 * e.g. `"i32"`, for `#[repr(C, i32)]`
 */
int: string | null, };
