// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

/**
 * Information about a target feature.
 *
 * Rust target features are used to influence code generation, especially around selecting
 * instructions which are not universally supported by the target architecture.
 *
 * Target features are commonly enabled by the [`#[target_feature]` attribute][1] to influence code
 * generation for a particular function, and less commonly enabled by compiler options like
 * `-Ctarget-feature` or `-Ctarget-cpu`. Targets themselves automatically enable certain target
 * features by default, for example because the target's ABI specification requires saving specific
 * registers which only exist in an architectural extension.
 *
 * Target features can imply other target features: for example, x86-64 `avx2` implies `avx`, and
 * aarch64 `sve2` implies `sve`, since both of these architectural extensions depend on their
 * predecessors.
 *
 * Target features can be probed at compile time by [`#[cfg(target_feature)]`][2] or `cfg!(â€¦)`
 * conditional compilation to determine whether a target feature is enabled in a particular
 * context.
 *
 * [1]: https://doc.rust-lang.org/stable/reference/attributes/codegen.html#the-target_feature-attribute
 * [2]: https://doc.rust-lang.org/reference/conditional-compilation.html#target_feature
 */
export type TargetFeature = { 
/**
 * The name of this target feature.
 */
name: string, 
/**
 * Other target features which are implied by this target feature, if any.
 */
implies_features: Array<string>, 
/**
 * If this target feature is unstable, the name of the associated language feature gate.
 */
unstable_feature_gate: string | null, 
/**
 * Whether this feature is globally enabled for this compilation session.
 *
 * Target features can be globally enabled implicitly as a result of the target's definition.
 * For example, x86-64 hardware floating point ABIs require saving x87 and SSE2 registers,
 * which in turn requires globally enabling the `x87` and `sse2` target features so that the
 * generated machine code conforms to the target's ABI.
 *
 * Target features can also be globally enabled explicitly as a result of compiler flags like
 * [`-Ctarget-feature`][1] or [`-Ctarget-cpu`][2].
 *
 * [1]: https://doc.rust-lang.org/beta/rustc/codegen-options/index.html#target-feature
 * [2]: https://doc.rust-lang.org/beta/rustc/codegen-options/index.html#target-cpu
 */
globally_enabled: boolean, };
